% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/filter_eSpectra.R
\name{filter_eSpectra}
\alias{filter_eSpectra}
\title{Filtering methods for eSpectra objects}
\usage{
filter_eSpectra(eSpectra, type, n = 11, p = 2, m = 0, window = NULL,
  res = NULL, X = NULL, wav = NULL, splice = NULL,
  interpol.bands = NULL)
}
\arguments{
\item{eSpectra}{Object of class \code{\link{eSpectra}}.}

\item{type}{\itemize{
\item 'S-Golay' for Sativsky Golay filter using \code{\link{sgolayfilt}},
\item 'Wavelet' for Wavelet decomposition using \code{\link{accessC.wd}},
\item 'MSC' for Multiplicative scatter correction, 
\item 'SNV' for Standard Normal Variate transformation.
\item 'C-hull' for Continuum removal by removing the convex hull
\item 'CompSpec' for reducing dimensions of a eSpectra by averaging values inside a window of a specified size
}}

\item{If}{type = 'S-Golay' then n,p and m parameters control \code{\link{sgolayfilt}} window size, polynomial order and derivative order respectively.}

\item{If}{type = 'Wavelet' res level to be extracted from wavelet decomposition model, see \code{\link{accessC.wd}}}

\item{If}{type = 'C-hull' specType also needs to be specified, with 0 if the data is in absorbance units or 1 if the data is in reflectance units.}

\item{If}{type = 'CompSpec' then window parameter will be the size over which the spectra will be averaged}

\item{If}{type is a character vector with more than one filter type the method will apply all the filters in the order they are specified. Extra parameters will be passed to ...=}
}
\description{
This method calls different filters on matrices in which each row is a separate spectrum
depending on the value of 'type':
}
\examples{
\dontrun{
data("eSpectraExample")


plot(eSpectraExample[1,as.character(350:2500)]) 
#Savitsky-Golay filter
SGolay_Spectra <- filter_eSpectra(eSpectraExample,type = 'S-Golay')

plot(SGolay_Spectra[1,as.character(350:2500)])

#Wavelet smoothing

plot(eSpectraExample[1,as.character(350:2397)],ylim=c(0,3))

points(filter_eSpectra(eSpectraExample[1,as.character(350:2397)],type = 'Wavelet',res=9),col='red')
points(filter_eSpectra(eSpectraExample[1,as.character(350:2397)],type = 'Wavelet',res=8),col='blue')
points(filter_eSpectra(eSpectraExample[1,as.character(350:2397)],type = 'Wavelet',res=7),col='green')

#Multiplicative scatter correction

MSC_Spectra <- filter_eSpectra(eSpectraExample,type = 'MSC')

plot(MSC_Spectra[1,as.character(350:2500)])
 
#Standard Normal Variate transform

SNV_Spectra <- filter_eSpectra(eSpectraExample,type = 'SNV')

plot(SNV_Spectra[1,as.character(350:2500)])


#Convex-hull transform

CHull_Spectra <- filter_eSpectra(eSpectraExample,type = 'C-hull')

plot(CHull_Spectra[1,as.character(350:2500)])


#CompSpec reduction

CompSpec_Spectra <- filter_eSpectra(eSpectraExample,type = 'CompSpec',window=9)

plot(eSpectraExample[1,as.character(350:2500)])
points(CompSpec_Spectra[1,as.character(350:2500)],col='red',lwd=2)
}

}
\references{
Savitzky, Abraham and Golay, M. J. E. (1964) Smoothing and Differentiation of Data by Simplified Least Squares Procedures, Analytical Chemistry, 36, pp. 1627-1629.
}
\author{
Mario Fajardo, Brendan Malone, Budiman Minasny, Michael Nelson, Sebastian Campbell.
}
